apiVersion: v1
kind: ConfigMap
metadata:
  name: scripts
data:
  configClient.sh: |-
    #!/bin/bash
    
    PEER_NAME=${1:-org0-peer0}

    # GENERAL
    export CORE_PEER_ADDRESS=$PEER_NAME:7051
    export ORDERER_ADDRESS=orderer0:7050
    export CORE_PEER_ID=cli-Org0
    export CORE_PEER_LOCALMSPID=Org0

    # CORE TLS
    export TLS_PATH=/data/crypto-config/peerOrganizations/Org0/peers/$PEER_NAME/tls
    export CORE_PEER_TLS_ENABLED=true
    export CORE_PEER_TLS_ROOTCERT_FILE=$TLS_PATH/ca.crt
    export CORE_PEER_TLS_CERT_FILE=$TLS_PATH/server.crt
    export CORE_PEER_TLS_KEY_FILE=$TLS_PATH/server.key
    
    # CLIENT TLS
    export CORE_PEER_TLS_CLIENTAUTHREQUIRED=true
    export CORE_PEER_TLS_CLIENTCERT_FILE=/data/crypto-config/peerOrganizations/Org0/users/Admin@Org0/tls/client.crt
    export CORE_PEER_TLS_CLIENTKEY_FILE=/data/crypto-config/peerOrganizations/Org0/users/Admin@Org0/tls/client.key

    # OTHER
    export GOPATH=/opt/gopath
    export CORE_PEER_MSPCONFIGPATH=/data/crypto-config/peerOrganizations/Org0/users/Admin@Org0/msp
    export ORDERER_CA=/data/crypto-config/ordererOrganizations/consortium/orderers/orderer0/msp/tlscacerts/tlsca.consortium-cert.pem
  

  runChaincode.sh: |-
    #!/bin/bash
    
    echo Setting env variables...
    cd /hlf-artifacts/

    echo Creating the channel...
    export CHANNEL_ID=mychannel
    peer channel create -o $ORDERER_ADDRESS -c $CHANNEL_ID -f ./channel.tx --tls --cafile $ORDERER_CA --certfile $CORE_PEER_TLS_CLIENTCERT_FILE --clientauth --keyfile $CORE_PEER_TLS_CLIENTKEY_FILE
    peer channel join -b mychannel.block
    peer channel list

    echo Installing chaincode...
    export CHAINCODE_PATH=/chaincode
    export CC_VERSION=1.0
    export CC_SEQUENCE=1
    peer lifecycle chaincode package basic_$CC_VERSION.tar.gz --path $CHAINCODE_PATH --lang golang --label basic_$CC_VERSION
    peer lifecycle chaincode install basic_$CC_VERSION.tar.gz
    peer lifecycle chaincode queryinstalled


    echo Getting the chaincode ID...
    INPUT=$(peer lifecycle chaincode queryinstalled)
    SUBSTRING=$(echo $INPUT| cut -d' ' -f 7)

    echo Approving chaincode...
    export CC_PACKAGE_ID=$(echo $SUBSTRING| cut -d',' -f 1)
    peer lifecycle chaincode approveformyorg -o $ORDERER_ADDRESS --channelID $CHANNEL_ID --name basic --version $CC_VERSION --package-id $CC_PACKAGE_ID --sequence $CC_SEQUENCE --tls --cafile $ORDERER_CA --certfile $CORE_PEER_TLS_CLIENTCERT_FILE --clientauth --keyfile $CORE_PEER_TLS_CLIENTKEY_FILE
    peer lifecycle chaincode checkcommitreadiness --channelID $CHANNEL_ID --name basic --version $CC_VERSION --sequence $CC_SEQUENCE --tls --cafile $ORDERER_CA --output json

    echo Commiting chaincode...
    peer lifecycle chaincode commit -o $ORDERER_ADDRESS --channelID $CHANNEL_ID --name basic --version $CC_VERSION --sequence $CC_SEQUENCE --tls --cafile $ORDERER_CA --peerAddresses $CORE_PEER_ADDRESS --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE --certfile $CORE_PEER_TLS_CLIENTCERT_FILE --clientauth --keyfile $CORE_PEER_TLS_CLIENTKEY_FILE
    peer lifecycle chaincode querycommitted --channelID $CHANNEL_ID --name basic --cafile $ORDERER_CA

    echo Chaincode installed successfully!!



# . /scripts/configClient.sh org0-peer0
# . /scripts/runChaincode.sh